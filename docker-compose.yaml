version: '3'
services:
  registry:
    image: registry:2
    ports:
      - "5000:5000"
    volumes:
      - ./data/registry:/var/lib/registry
      - ./registry.yaml:/etc/docker/registry/config.yml:ro
    depends_on:
      - webhook

  webhook:
    image: thecatlady/webhook
    command: -debug -verbose -hooks /config/hooks.yml -hotreload -template
    env_file:
      - ./secrets/webhook.env
    expose:
      - "9000:9000"
    volumes:
      - ./hooks.yaml:/config/hooks.yml:ro
      - ./webhook.fifo:/webhook.fifo
      - ./webhook.sh:/webhook.sh

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./secrets/cert.crt:/etc/nginx/cert.crt:ro
      - ./secrets/cert.key:/etc/nginx/cert.key:ro
      - ./secrets/auth.htpasswd:/etc/nginx/auth.htpasswd:ro
      - ./logs/nginx:/var/log/nginx
      - website:/var/www/website:ro
      - latex-previewer:/var/www/latex-previewer:ro
      - xaufome:/var/www/xaufome:ro
      - commits:/var/www/commits:ro
    depends_on:
      - registry
      - webhook
      # Subdomains
      - website
      - latex-previewer
      - xaufome
      - atrellado
      - commits
      # Admin stuff
      - authentik-server
      - authentik-worker
      - authentik-ldap
      - pgadmin
      - prometheus
      - grafana
      - cadvisor
      - node-exporter
      # Media apps
      - jellyfin
      - radarr
      - sonarr
      - bazarr
      - readarr
      - prowlarr
      - qbittorrent

  # Subdomains

  website:
    image: localhost:5000/website:latest
    volumes:
      - website:/app:rw

  latex-previewer:
    image: localhost:5000/latex-previewer:latest
    volumes:
      - latex-previewer:/app:rw

  xaufome:
    image: localhost:5000/xaufome:latest
    volumes:
      - xaufome:/var/www/html
      - ./data/xaufome.db:/var/www/html/database/main.db
    expose:
      - "9000:9000"

  atrellado:
    image: localhost:5000/atrellado:latest
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: atrellado
      DB_USERNAME: atrellado

      MAIL_MAILER: smtp
      MAIL_HOST: smtp
      MAIL_PORT: 25
    env_file:
      - ./secrets/atrellado.env
    expose:
      - "80:80"
    depends_on:
      - postgres
      - smtp

  commits:
    image: localhost:5000/commits:latest
    volumes:
      - commits:/app:rw

  # Admin stuff

  authentik-server:
    image: ghcr.io/goauthentik/server:latest
    command: server
    env_file:
      - ./secrets/authentik.env
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
    expose:
      - "9000:9000"
      - "9300:9300"
      - "9443:9443"
    volumes:
      - ./data/authentik/media:/media
      - ./data/authentik/templates:/templates
    depends_on:
      - postgres
      - redis

  authentik-worker:
    image: ghcr.io/goauthentik/server:latest
    command: worker
    env_file:
      - ./secrets/authentik.env
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
    volumes:
      - ./data/authentik/media:/media
      - ./data/authentik/templates:/templates
      - ./data/authentik/certs:/certs
    depends_on:
      - postgres
      - redis

  authentik-ldap:
    image: ghcr.io/goauthentik/ldap:latest
    env_file:
      - ./secrets/authentik-ldap.env
    environment:
      AUTHENTIK_HOST: https://authentik-server:9443
      AUTHENTIK_INSECURE: "true"
    expose:
      - "3389:3389"
      - "6636:6636"
      - "9300:9300"
  
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    env_file:
      - ./secrets/pgadmin.env
    environment:
      PGADMIN_CONFIG_AUTHENTICATION_SOURCES: "['oauth2']"
      PGADMIN_CONFIG_OAUTH2_AUTO_CREATE_USERS: "True"
      PGADMIN_CONFIG_OAUTH2_CONFIG: |
        [{
          'OAUTH2_NAME': 'authentik',
          'OAUTH2_DISPLAY_NAME' : 'Authentik',
          'OAUTH2_CLIENT_ID' : __import__('os').environ['AUTHENTIK_CLIENT_ID'],
          'OAUTH2_CLIENT_SECRET' : __import__('os').environ['AUTHENTIK_CLIENT_SECRET'],
          'OAUTH2_TOKEN_URL' : 'https://sso.toino.pt/application/o/token/',
          'OAUTH2_AUTHORIZATION_URL' : 'https://sso.toino.pt/application/o/authorize/',
          'OAUTH2_API_BASE_URL' : 'https://sso.toino.pt/',
          'OAUTH2_USERINFO_ENDPOINT' : 'https://sso.toino.pt/application/o/userinfo/',
          'OAUTH2_SERVER_METADATA_URL' : 'https://sso.toino.pt/application/o/pgadmin/.well-known/openid-configuration',
          'OAUTH2_SCOPE' : 'openid email profile',
          'OAUTH2_BUTTON_COLOR' : '#FD4B2D',
          'OAUTH2_ICON' : 'fa fa-lock',
        }]
    expose:
      - "80:80"
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    expose:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
  
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    expose:
      - "3000:3000"
    environment:
      GF_SERVER_ROOT_URL: "https://grafana.toino.pt/"
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "Authentik"
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://sso.toino.pt/application/o/authorize/"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://sso.toino.pt/application/o/token/"
      GF_AUTH_GENERIC_OAUTH_API_URL: "https://sso.toino.pt/application/o/userinfo/"
      GF_AUTH_SIGNOUT_REDIRECT_URL: "https://sso.toino.pt/application/o/grafana/end-session/"
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], 'Superusers') && ('Admin' || 'Editor') || 'Viewer'"
      GF_AUTH_OAUTH_AUTO_LOGIN: "true"
    env_file:
      - ./secrets/grafana.env
    volumes:
      - ./data/grafana:/var/lib/grafana
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    expose:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
  
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    pid: host
    command:
      - --path.rootfs=/host
    expose:
      - "9100:9100"
    volumes:
      - /:/host:ro,rslave

  # Media apps

  jellyfin:
    image: linuxserver/jellyfin:latest
    restart: unless-stopped
    expose:
      - "8096:8096"
    volumes:
      - ./data/jellyfin:/config
      - ./data/media/media:/data

  radarr:
    image: linuxserver/radarr:latest
    restart: unless-stopped
    expose:
      - "7878:7878"
    volumes:
      - ./data/radarr:/config
      - ./data/media:/data

  sonarr:
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    expose:
      - "8989:8989"
    volumes:
      - ./data/sonarr:/config
      - ./data/media:/data

  bazarr:
    image: linuxserver/bazarr:latest
    restart: unless-stopped
    expose:
      - "6767:6767"
    volumes:
      - ./data/bazarr:/config
      - ./data/media:/data

  readarr:
    image: linuxserver/readarr:develop
    restart: unless-stopped
    expose:
      - "8787:8787"
    volumes:
      - ./data/readarr:/config
      - ./data/media:/data

  prowlarr:
    image: linuxserver/prowlarr:latest
    restart: unless-stopped
    expose:
      - "9696:9696"
    volumes:
      - ./data/prowlarr:/config

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    restart: unless-stopped
    environment:
      - WEBUI_PORT=8080
    expose:
      - "8080:8080"
    volumes:
      - ./data/qbittorrent:/config/qBittorrent
      - ./data/media/torrents:/data/torrents

  # Other services

  postgres:
    image: postgres:alpine
    restart: unless-stopped
    env_file:
      - ./secrets/postgres.env
    environment:
      - POSTGRES_MULTIPLE_DATABASES=atrellado,authentik
    expose:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh:ro

  redis:
    image: redis:alpine
    restart: unless-stopped
    expose:
      - "6379:6379"
    volumes:
      - ./data/redis:/data

  smtp:
    image: namshi/smtp:latest
    restart: unless-stopped
    expose:
      - "25:25"

volumes:
  website:
  latex-previewer:
  xaufome:
  commits:
